@use 'variables' as *;



.form{

  &-control{
    background-color: transparent;
    border: none;
    color: $white;

    &:focus{
      background-color: transparent;
      color: $white;
    }
  }
}
textarea{

  &.form{

    &-control{
      resize: none;
      height: 300px;
    }
  }
}

.input {

  &-component{

    &-text{
      display: flex;
      justify-content: start;
      align-items: flex-start;
      flex-direction: column;
      gap: 1rem;
      margin-block: 2rem;
      font-size: 18px;

      &::after{
        content: '';
        height: 1px;
        width: 100%;
        background-color: $white;
      }

      //text childs
      & input {
        color: $white;
        background-color: transparent;
        border: none;
        width: 100%;

        &:focus{
          outline: none;
        }
        &::placeholder{
          color: transparent;
        }
        @extend %_input_tranistion;
      }

      & textarea{
        resize: none;
        height: 200px;
        color: $white;
        background-color: transparent;
        border: none;
        width: 100%;

        &:focus{
          outline: none;
        }
        &::placeholder{
          color: transparent;
        }

        @extend %_input_tranistion;
      }

      & label{
        position: absolute;
        color: #ffa552;
        opacity: 0.5;
        transition-duration: 0.1s;
        transition-timing-function: ease-in-out;
        pointer-events: none;
        //Weird things happen with stacking context, conflict with main navigation. dont'remove.
        z-index: -1;
      }

    }
  }

  //Checkboxes
  &-checkbox{
    display: flex;
    align-items: center;

    &-label{
      display: flex;
      justify-content: center;
      align-items: center;
      cursor: pointer;
      gap: 1rem;

      &-checkmark{
        display: block;
        border: 1px solid $primary;
        border-radius: 5px;
        height: 24px;
        aspect-ratio: 1;
        transition-duration: 50ms;
        transition-timing-function: ease-in-out;
      }

      & input{
        position: absolute;
        opacity: 0;
        height: 0;
        width: 0;

        &:checked{

          & ~ .input{

            &-checkbox{

              &-label{

                &-checkmark{
                  background-color: $primary;
                  background-image: url("../img/icons/Check.svg");
                }
              }
            }
          }
        }
      }
    }
  }
}

:is(.input-component-text %_input_tranistion:focus-within, :not(.input-component-text %_input_tranistion:placeholder-shown)) + label {
  transform: translate(0.05rem, -110%);
  opacity: 1;
  font-size: 14px;
}


.toast{

  &-container{
    max-height: 50%;
    overflow-y: hidden;
  }
}
